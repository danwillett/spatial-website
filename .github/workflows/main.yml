name: Deploy Node.js App to Dokku grit-web02.grit.ucsb.edu

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    runs-on: self-hosted
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Cache Node.js modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
          **/node_modules
        # Define key for cache
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-v2
        # Define restore keys to find the cache in case of a partial match
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Dependencies
      run: npm ci

    - name: Build
      run: CI=false npm run build

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -p 22 grit-web02.grit.ucsb.edu >> ~/.ssh/known_hosts
        
    
    - name: Unlock Dokku app (if locked)
      run: |
        ssh -o StrictHostKeyChecking=no dokku@grit-web02.grit.ucsb.edu dokku apps:unlock spatial || echo "App not locked or unlock failed, proceeding..."
      
    - name: Deployment Start Time
      run: echo "DEPLOY_START_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
  
    - name: Deploy to Dokku
      run: |
        DEPLOY_START=$(date +%s)
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git remote add dokku dokku@grit-web02.grit.ucsb.edu:spatial || git remote set-url dokku dokku@grit-web02.grit.ucsb.edu:spatial
        git push dokku +main
        DEPLOY_END=$(date +%s)
        DEPLOY_DURATION=$((DEPLOY_END - DEPLOY_START))
        echo "DEPLOY_DURATION=${DEPLOY_DURATION}" >> $GITHUB_ENV
        echo "::set-output name=deployment_summary::Deployment to Dokku was successful."
      working-directory: ./

    - name: Echo deployment summary
      run: |
        echo "Deployment Summary:"
        echo "Start Time: ${{ env.DEPLOY_START_TIME }}"
        echo "Duration: ${{ env.DEPLOY_DURATION }} seconds"
        echo "Status: ${{ steps.deploy.outputs.deployment_summary }}"
